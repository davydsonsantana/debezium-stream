# Nginx for test
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
#SQL Server Origin
---
apiVersion: v1
kind: Service
metadata:
  name: sqlserver-origin-service
spec:
  selector:
    app: sqlserver-origin
  ports:
  - protocol: TCP
    port: 1433
    targetPort: 1433
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlserver-origin
spec:
  selector:
    matchLabels:
      app: sqlserver-origin
  replicas: 1
  template:
    metadata:
      labels:
        app: sqlserver-origin
    spec:
      containers:
      - name: sqlserver-origin
        image: mcr.microsoft.com/mssql/server:2019-CU18-ubuntu-20.04
        ports:
        - containerPort: 1433
          name: "sql-server"
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: MSSQL_SA_PASSWORD
          value: "Stone@2019!"
        - name: MSSQL_PID
          value: "Standard"
        - name: MSSQL_AGENT_ENABLED
          value: "True"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
# Zookeper
---
apiVersion: v1
kind: Service
metadata:
  name: zookeper-service
spec:
  selector:
    app: zookeper
  ports:
  - protocol: TCP
    port: 2181
    targetPort: 2181
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeper
spec:
  selector:
    matchLabels:
      app: zookeper
  replicas: 1
  template:
    metadata:
      labels:
        app: zookeper
    spec:
      containers:
      - name: zookeper
        image: confluentinc/cp-zookeeper:latest
        ports:
        - containerPort: 2181
          name: "zookeper"
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        resources:
          requests:
            memory: "200Mi"
            cpu: "50m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
# Kafka
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  selector:
    app: kafka
  ports:
  - protocol: TCP
    port: 9092
    targetPort: 9092
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:latest
        ports:
        - containerPort: 9092
          name: "kafka"
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeper-service.default.svc.cluster.local:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:9092"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
#Kafka UI
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui-service
spec:
  selector:
    app: kafka-ui
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
spec:
  selector:
    matchLabels:
      app: kafka-ui
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
      - name: kafka-ui
        image: provectuslabs/kafka-ui
        ports:
        - containerPort: 8080
          name: "kafka-ui"
        env:
        - name: KAFKA_CLUSTERS_0_NAME
          value: "local"
        - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
          value: "kafka-service.default.svc.cluster.local:9092"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
